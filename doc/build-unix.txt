Copyright (c) 2009-2012 Bitcoin Developers
Distributed under the MIT/X11 software license, see the accompanying
file license.txt or http://www.opensource.org/licenses/mit-license.php.
This product includes software developed by the OpenSSL Project for use in
the OpenSSL Toolkit (http://www.openssl.org/).  This product includes
cryptographic software written by Eric Young (eay@cryptsoft.com).


UNIX BUILD NOTES
================

To Build
--------

cd src/
make -f makefile.unix
strip chesscoind


Dependencies
================

 Library     Purpose           Description                 Install Path
 -------     -------           -----------                 -------------
 libssl      SSL Support       Secure communications       /usr/local/ssl.1.1.1/
 libdb       Berkeley DB       Blockchain & wallet storage /usr/local/berkeleydb.6.0.20/
 libboost    Boost             C++ Library                 /usr/local/boost.1.77.0/
 libqrencode QRCode generation Optional QRCode generation  /usr/local/
 
Install Dependencies
--------------------
  OpenSSL 1.1.1l 24 Aug 2021
  --------------------------
	Download Source: https://ftp.openssl.org/source/openssl-1.1.1l.tar.gz
	
	$ cd {openssl tar folder}
	$ tar zxvf openssl-1.1.1l.tar.gz
	$ cd openssl-1.1.1l
	$ ./config --prefix=/usr/local/ssl.1.1.1 --openssldir=/usr/local/ssl.1.1.1 shared zlib
	$ make
	$ make install 

  Berkeley DB
  -----------
	Download Source: http://download.oracle.com/berkeley-db/db-6.0.20.tar.gz
	
	$ cd {berkeley tar folder}
	$ tar xvfz db-6.0.20.tar.gz 
	$ cd db-6.0.20/build_unix
	$../dist/configure  --prefix=/usr/local/berkeleydb.6.0.20 --enable-mingw --enable-cxx
	or 
	$../dist/configure  --prefix=/usr/local/berkeleydb.6.0.20 --enable-cxx --enable-dbm --enable-compat185
	$make
	
  Boost
  -----
	Download Source: https://boostorg.jfrog.io/artifactory/main/release/1.77.0/source/boost_1_77_0.tar.gz
					 https://www.boost.org/users/history/version_1_77_0.html
					 
	$ cd {boost extracted folder}
	$ ./bootstrap
	$ b2 --with-chrono --with-filesystem --with-program_options --with-system --with-thread toolset=gcc cxxflags="-std=gnu++11" link=static threading=multi runtime-link=static stage
	$ b2 install --prefix=/usr/local/boost.1.77.0

  Miniupnpc
  ---------
	Download Source: http://miniupnp.free.fr/files/download.php?file=miniupnpc-1.9.20150206.tar.gz 
	
    $ cd miniupnpc-1.9.20150206
	$ make init upnpc-static
	$ make install

  libpng
  -------
	Download Source: http://prdownloads.sourceforge.net/libpng/libpng-1.6.37.tar.xz?download
	
	$ cd {libpng tar folder}
	$ tar xvfz libpng-1.6.37.tar.gz
	$ cd libpng-1.6.37
	$ ./configure --disable-shared
	$ make
	$ cp .libs/libpng16.a .libs/libpng.a

  qrencode
  --------
	Download Source: http://sources.buildroot.net/libqrencode/qrencode-4.1.1.tar.gz

	$ cd {qrencode tar folder}
	$ tar xvfz qrencode-4.1.1.tar.gz
	$ cd qrencode-4.1.1
	$ LIBS="../libpng-1.6.37/.libs/libpng.a {QT.Dir}/Tools/mingw530_32/i686-w64-mingw32/lib/libz.a" \
	  png_CFLAGS="-I../libpng-1.6.37" \
	  png_LIBS="-L../libpng-1.6.37/.libs" \
	  configure
	$ make


To Build
--------
  Qt 5.9.2 Install
  ----------------
	Download Source: https://download.qt.io/archive/qt/5.9/5.9.2/qt-opensource-linux-x64-5.9.2.run
	
	Download Qt version from above URL and install with defaults.
	
  Compile leveldb	
  ---------------

		$cd {project}/src/leveldb
		$TARGET_OS=Linux make libleveldb.a libmemenv.a

  Compile chesscoind 
  ------------------

		$ cd {Project}/src
		$ make -f makefile.unix
		$ strip chesscoind	
